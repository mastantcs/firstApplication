package com.main.logic;

import java.util.Arrays;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.function.Function;
import java.util.stream.Collector;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class SeparateOddAndEvenNumbers {

	public static void main(String[] args) {

		//Given a list of integers, separate odd and even numbers?
		
		List<Integer> listOfIntegers = Arrays.asList(1,2,2,3,4,5,6,7,8,9,10);
		Map<Boolean,List<Integer>> mapOfEvenAndOddNumbers = listOfIntegers.stream().collect(Collectors.partitioningBy(i->i%2==0));
		Set<Entry<Boolean,List<Integer>>> entrySet = mapOfEvenAndOddNumbers.entrySet();
		for(Entry<Boolean,List<Integer>> entry:entrySet) {
			System.out.println(entry);
		}
		
		//How do you remove duplicate elements from a list using Java 8 streams?
		
		listOfIntegers.stream().distinct().forEach(System.out::println);
		
		//How do you find frequency of each character in a string using Java 8 streams?
		
		String str = "mastanaPuli";
		Map<String,Long> frequencyOfEachCharacter = Stream.of(str.split("")).collect(Collectors.groupingBy(Function.identity(),Collectors.counting()));
		System.out.println(frequencyOfEachCharacter.entrySet());
		
		//From the given list of integers, print the numbers which are multiples of 5
		
		listOfIntegers.stream().filter(i->i%5==0).forEach(System.out::println);
		
		//Given a list of integers, find maximum and minimum of those numbers?
		int maximum = listOfIntegers.stream().max(Comparator.naturalOrder()).get();
		
	}

}
